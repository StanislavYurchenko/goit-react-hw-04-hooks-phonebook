{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItemItem/ContactItemItem.js","components/ContactList/ContactList.js","components/PhoneBook/PhoneBook.js","api/localStorageApi.js","components/App/App.js","index.js","components/ContactItemItem/ContactListItem.module.css","components/ContactForm/ContactForm.module.css","components/PhoneBook/PhoneBook.module.css"],"names":["module","exports","ContactForm","addContact","isExistContact","useState","name","setName","number","setNumber","onChange","event","target","value","toast","error","reset","onSubmit","preventDefault","normalizedName","trim","id","uuidv4","className","styles","input","type","Filter","filter","description","ContactListItem","contact","removeContact","onClick","ContactList","contacts","removeContactById","toLowerCase","includes","map","defaultProps","PhoneBook","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","setContactsToLocalStorage","containerClasses","container","join","title","newContact","some","length","idToRemove","autoClose","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c0cd096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Filter_description__3HM21\",\"input\":\"Filter_input__1Dfze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__2hcRT\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nfunction ContactForm({ addContact, isExistContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        toast.error(`There are no type input \"${name}\"`);\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.trim();\n    if (isExistContact(name)) {\n      return toast.error(`\"${normalizedName}\" contact already exists`);\n    }\n    if (!normalizedName) {\n      return toast.error('Enter contact name');\n    }\n    addContact({ name: normalizedName, number, id: uuidv4() });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <h3>Name</h3>\n      <input\n        className={styles.input}\n        name=\"name\"\n        value={name}\n        onChange={onChange}\n        type=\"text\"\n      />\n\n      <h3>Number</h3>\n      <input\n        className={styles.input}\n        name=\"number\"\n        value={number}\n        onChange={onChange}\n        type=\"text\"\n      />\n\n      <button className={styles['remove-btn']} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  isExistContact: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <>\r\n      <div className={styles.description}>Find contacts by name</div>\r\n      <input className={styles.input} onChange={onChange} value={filter} name=\"filter\" type=\"text\" />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Filter;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nfunction ContactListItem({ contact, removeContact }) {\n  return (\n    <li className={styles.contact}>\n      <div>\n        <span className={styles['contact-name']}>{contact.name}:</span>\n        <span className={styles['contact-number']}>{contact.number}</span>\n      </div>\n\n      <button\n        className={styles['remove-btn']}\n        onClick={() => removeContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  }),\n\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactItemItem/ContactItemItem';\nimport styles from './ContactList.module.css';\n\nfunction ContactList({ contacts, filter, removeContactById }) {\n  return (\n    <>\n      <ul className={styles.contacts}>\n        {filter\n          ? contacts\n              .filter(contact =>\n                contact.name\n                  .toLowerCase()\n                  .trim()\n                  .includes(filter.toLowerCase().trim()),\n              )\n              .map(contact => (\n                <ContactListItem\n                  key={contact.id}\n                  contact={contact}\n                  removeContact={removeContactById}\n                />\n              ))\n          : contacts.map(contact => (\n              <ContactListItem\n                key={contact.id}\n                contact={contact}\n                removeContact={removeContactById}\n              />\n            ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: {\n    number: '',\n  },\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n  filter: PropTypes.string.isRequired,\n  removeContactById: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport {\n  getContactsFromLocalStorage,\n  setContactsToLocalStorage,\n} from '../../api/localStorageApi';\nimport styles from './PhoneBook.module.css';\n\nfunction PhoneBook() {\n  const [contacts, setContacts] = useState(() => getContactsFromLocalStorage());\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    setContactsToLocalStorage(contacts);\n  }, [contacts]);\n\n  const addContact = newContact => {\n    setContacts([...contacts, newContact]);\n  };\n\n  const onChange = event => {\n    const { value } = event.target;\n    setFilter(value);\n  };\n\n  const removeContactById = idToRemove => {\n    setContacts(contacts.filter(({ id }) => idToRemove !== id));\n  };\n\n  const isExistContact = name => {\n    return contacts.some(contact => contact.name === name);\n  };\n\n  const containerClasses = [styles.container];\n\n  return (\n    <div className={containerClasses.join(' ')}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm addContact={addContact} isExistContact={isExistContact} />\n\n      {contacts.length > 0 && (\n        <>\n          <h2 className={styles['sub-title']}>Contacts</h2>\n          <Filter filter={filter} onChange={onChange} />\n          <ContactList\n            filter={filter}\n            contacts={contacts}\n            removeContactById={removeContactById}\n          />\n        </>\n      )}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default PhoneBook;\n","export const getContactsFromLocalStorage = () => {\n  const localStorageData = JSON.parse(localStorage.getItem('contacts'));\n  return localStorageData ? localStorageData : [];\n};\n\nexport const setContactsToLocalStorage = contacts => {\n  localStorage.setItem('contacts', JSON.stringify(contacts));\n};\n","import React from 'react';\nimport PhoneBook from '../PhoneBook/PhoneBook';\n\nfunction App() {\n  return <PhoneBook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__16xp7\",\"contact-name\":\"ContactListItem_contact-name__2sEWF\",\"contact-number\":\"ContactListItem_contact-number__1Y9eG\",\"remove-btn\":\"ContactListItem_remove-btn__2IFb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3SUm_\",\"remove-btn\":\"ContactForm_remove-btn__2bpvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__2f2aQ\",\"title\":\"PhoneBook_title__20VKv\",\"sub-title\":\"PhoneBook_sub-title__2twyC PhoneBook_title__20VKv\"};"],"sourceRoot":""}